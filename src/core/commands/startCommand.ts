import { Markup } from "telegraf";
import { Command } from "../../lib/structures/Command.js";
import type { Context } from "../../lib/types/Context.js";

type MainMenuAction = "auto_registration" | "create_subscription" | "search_tickets" | "travel_together";

const WELCOME_MESSAGE = `–ü—Ä–∏–≤–µ—Ç! üëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –¢—Ä–µ–≤–µ–ª–∏–Ω! –Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ —Å–∞–º—ã–µ –¥–µ—à—ë–≤—ã–µ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã! –ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏—Ç–µ:

‚Äî –û—Ç–∫—É–¥–∞. ‚úàÔ∏è
‚Äî –ö—É–¥–∞. üåç
‚Äî –í –∫–∞–∫–∏–µ –¥–∞—Ç—ã –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ª–µ—Ç–µ—Ç—å. üìÜ

‚úàÔ∏è –Ø –Ω–∞–π–¥—É —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ –±–∏–ª–µ—Ç—ã –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã!

–ß–µ–º —è –µ—â—ë –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω:
‚Äî –£–∫–∞–∂–∏—Ç–µ –ª—é–±–æ–π –º–µ—Å—è—Ü –≤–º–µ—Å—Ç–æ —Ç–æ—á–Ω–æ–π –¥–∞—Ç—ã üìÜ ‚Äî –∏ —è –Ω–∞–π–¥—É —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥.
‚Äî –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω +/- 1‚Äì3 –¥–Ω—è üìÖ ‚Äî —è –ø–æ–∫–∞–∂—É –±–∏–ª–µ—Ç—ã —Å –∑–∞—Ö–≤–∞—Ç–æ–º —ç—Ç–∏—Ö –¥–∞—Ç.
‚Äî –î–æ–±–∞–≤—å—Ç–µ –±–∞–≥–∞–∂ üß≥, –ø–µ—Ä–µ—Å–∞–¥–∫–∏ üîÑ –∏ –∏—Ö –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚è≥ ‚Äî –Ω–∞–π–¥—É –±–∏–ª–µ—Ç—ã —Å —Ç–∞–∫–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏.
‚Äî –ò—â—É –ø–æ —Ä–∞–∑–º–µ—Ä—É —Å–∫–∏–¥–∫–∏ üí∞ ‚Äî –ø—Ä–∏—à–ª—é –±–∏–ª–µ—Ç—ã, –µ—Å–ª–∏ –Ω–∞—á–Ω–µ—Ç—Å—è —Å–µ–∑–æ–Ω —Ä–∞—Å–ø—Ä–æ–¥–∞–∂.
‚Äî –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—É—é –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—é üõ©Ô∏è ‚Äî –Ω–∞–π–¥—É –±–∏–ª–µ—Ç—ã —Å —ç—Ç–æ–π –∞–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏–µ–π, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã.

–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –¥–∞—Ç—ã, –∏ —è –ø—Ä–æ–≤–µ—Ä—é –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã! üëå

–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, —è –ª—é–±–ª—é –ø–æ–º–æ–≥–∞—Ç—å! ‚ù§Ô∏è`;

class StartCommand extends Command {
	private readonly menuButtons: readonly (readonly [string, MainMenuAction])[] = [
		["üëÄ –ù–∞–π—Ç–∏ —Å–∞–º—ã–µ –¥–µ—à—ë–≤—ã–µ –±–∏–ª–µ—Ç—ã", "search_tickets"],
		["üîç –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "create_subscription"],
		["ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "auto_registration"],
		["‚ú® –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–µ–º –≤–º–µ—Å—Ç–µ ‚ú®", "travel_together"],
	] as const;

	public constructor() {
		super({
			name: "start",
			description: "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.",
		});
	}

	public async execute(ctx: Context): Promise<void> {
		await ctx.reply(WELCOME_MESSAGE);

		const keyboard = Markup.inlineKeyboard(
			this.menuButtons.map(([text, callback_data]) => [Markup.button.callback(text, callback_data)]),
		);

		await ctx.reply("üìú –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:", keyboard);
	}
}

export const startCommand = new StartCommand();
